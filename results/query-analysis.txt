// The analysis should be read jointly with the following files:
- ./results/7_taverna_queries.txt, and 
- ../results-kdrive/7_gq_queries.txt


=== The common queries ===

“Find the activity and its role in a generation”

select distinct * where {?s ?p [prov:activity ?o; prov:hadRole ?o1] } 

“Find the agent and plan associated with an activity”	

select distinct * where {?s ?p [prov:hadPlan ?o; prov:agent ?o1] } 

“Find the entity and its role in a usage”	

select distinct * where {?s ?p [prov:entity ?o; rdf:type ?o1; prov:hadRole ?o2] } 

=== Queries only returned by K-Drive ===

“Find out the sha1 and sha512 coding of a data content”	

SELECT ?type ?sha1 ?sha512 ?x0_1  
 WHERE {
#types

#attributes
?type <http://ns.taverna.org.uk/2012/tavernaprov/sha1> ?sha1 .
?type <http://ns.taverna.org.uk/2012/tavernaprov/sha512> ?sha512 .

#relations

#reverse relations
 ?x0_1 <http://ns.taverna.org.uk/2012/tavernaprov/content> ?type .

}


“Find out the data content of each element of a collection”	

SELECT ?type ?x1_1 ?Collection  
 WHERE {
#types
?Collection rdf:type <http://www.w3.org/ns/prov#Collection>.

#attributes

#relations
?type <http://ns.taverna.org.uk/2012/tavernaprov/content> ?x1_1 .

#reverse relations
 ?Collection <http://www.w3.org/ns/prov#hadMember> ?type .

}

“Find out the data generated by a workflow run and processes of a workflow, and information about each process run, including its start, end time, process describes, inputs used and a free-text description”		

SELECT ?type ?label ?startedAtTime ?endedAtTime ?Usage ?Association ?x8_1 ?x9_1 ?x9_2 ?WorkflowRun ?x0_1 ?x0_2 ?Generation  
 WHERE {
#types
?Usage rdf:type <http://www.w3.org/ns/prov#Usage>.
?Association rdf:type <http://www.w3.org/ns/prov#Association>.
?WorkflowRun rdf:type <http://purl.org/wf4ever/wfprov#WorkflowRun>.
?Generation rdf:type <http://www.w3.org/ns/prov#Generation>.
?WorkflowRun rdf:type <http://purl.org/wf4ever/wfprov#WorkflowRun>.

#attributes
?type <http://www.w3.org/2000/01/rdf-schema#label> ?label .
?type <http://www.w3.org/ns/prov#startedAtTime> ?startedAtTime .
?type <http://www.w3.org/ns/prov#endedAtTime> ?endedAtTime .

#relations
?type <http://www.w3.org/ns/prov#qualifiedUsage> ?Usage .
?type <http://www.w3.org/ns/prov#qualifiedAssociation> ?Association .
?type <http://purl.org/wf4ever/wfprov#describedByProcess> ?x8_1 .
?type <http://purl.org/wf4ever/wfprov#usedInput> ?x9_1 .
?type <http://www.w3.org/ns/prov#used> ?x9_2 .
?type <http://purl.org/wf4ever/wfprov#wasPartOfWorkflowRun> ?WorkflowRun .

#reverse relations
 ?x0_1 <http://www.w3.org/ns/prov#wasGeneratedBy> ?type .
 ?x0_2 <http://purl.org/wf4ever/wfprov#wasOutputFrom> ?type .
 ?Generation <http://www.w3.org/ns/prov#activity> ?type .
 ?WorkflowRun <http://purl.org/dc/terms/hasPart> ?type .

}


=== Queries that overlap with K-Drive ===

“Find out, each data collection, how it was derived, its content and parameter definitions”	

SELECT ?Collection ?x0_1 ?x4_1 ?x4_2 ?x1_1 ?Generation ?x3_1  
 WHERE {
#types
?Collection rdf:type <http://www.w3.org/ns/prov#Collection>.
?Generation rdf:type <http://www.w3.org/ns/prov#Generation>.

#attributes

#relations
?Collection <http://www.w3.org/ns/prov#hadMember> ?x0_1 .
?Collection <http://www.w3.org/ns/prov#wasGeneratedBy> ?x4_1 .
?Collection <http://purl.org/wf4ever/wfprov#wasOutputFrom> ?x4_2 .
?Collection <http://ns.taverna.org.uk/2012/tavernaprov/content> ?x1_1 .
?Collection <http://www.w3.org/ns/prov#qualifiedGeneration> ?Generation .
?Collection <http://purl.org/wf4ever/wfprov#describedByParameter> ?x3_1 .

#reverse relations

}

=== One query from ProvQ that is missing here ===

select distinct * where {?s prov:wasDerivedFrom ?o; taverna:errorMessage ?o1; taverna:stackTrace ?o2.} 
